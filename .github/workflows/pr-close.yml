name: Run only when merging PRs with label named "minor" or "major".

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  merge_pr:
    name: "PR Merged"
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      token: ${{ secrets.PAT }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Build
        run: npm run build
      - name: Set git config
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Apply version bump (major)
        if: contains(github.event.pull_request.labels.*.name, 'major')
        run: npm --tag-version-prefix="test-v" version major -m 'Upgrade to major version %s' && git push --tags origin main
      - name: Apply version bump (minor)
        if: contains(github.event.pull_request.labels.*.name, 'minor')
        run: npm --tag-version-prefix="test-v" version minor && git push --tags origin main
      - name: Apply version bump (patch)
        if: contains(github.event.pull_request.labels.*.name, 'patch')
        run: npm --tag-version-prefix="test-v" version patch && git push --tags origin main
      - name: Apply version bump (premajor)
        if: contains(github.event.pull_request.labels.*.name, 'premajor')
        run: npm --tag-version-prefix="test-v" version patch && git push --tags origin main
      - name: Apply version bump (preminor)
        if: contains(github.event.pull_request.labels.*.name, 'preminor')
        run: npm --tag-version-prefix="test-v" version preminor && git push --tags origin main
      - name: Apply version bump (prepatch)
        if: contains(github.event.pull_request.labels.*.name, 'prepatch')
        run: npm --tag-version-prefix="test-v" version prepatch && git push --tags origin main
      - name: Apply version bump (prerelease)
        if: contains(github.event.pull_request.labels.*.name, 'prerelease')
        run: npm --tag-version-prefix="test-v" version prerelease && git push --tags origin main
      - name: Apply version bump (patch)
        if: contains(github.event.pull_request.labels.*.name, 'patch')
        run: npm --tag-version-prefix="test-v" version patch && git push --tags origin main



npm version [<newversion> | major | minor | patch | premajor | preminor | prepatch | prerelease | from-git]